<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.smauel</groupId>
    <artifactId>parent</artifactId>
    <version>1.1.0-SNAPSHOT</version>
    <packaging>pom</packaging>

    <modules>
        <module>boms</module>
        <module>backend</module>
        <module>collections</module>
    </modules>

    <distributionManagement>
        <repository>
            <id>github</id>
            <name>GitHub Packages</name>
            <url>https://maven.pkg.github.com/smauel/smauel-java</url>
        </repository>
    </distributionManagement>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <lombok.version>1.18.38</lombok.version>
        <rewrite.version>6.8.1</rewrite.version>
        <rewrite.logging.version>3.8.0</rewrite.logging.version>
        <rewrite.testing.version>3.8.0</rewrite.testing.version>
        <rewrite.java.version>3.9.0</rewrite.java.version>
        <spotless.version>2.44.4</spotless.version>
        <jacoco.version>0.8.12</jacoco.version>
        <allure.version>2.15.2</allure.version>
        <aspectj.version>1.9.21</aspectj.version>
        <maven.compiler.version>3.14.0</maven.compiler.version>
        <maven.surefire.version>3.5.3</maven.surefire.version>
        <maven.failsafe.version>3.5.3</maven.failsafe.version>
        <maven.enforcer.version>3.5.0</maven.enforcer.version>
        <maven.javadoc.version>3.6.3</maven.javadoc.version>
        <maven.source.version>3.3.0</maven.source.version>
        <maven.dockerfile.version>1.4.13</maven.dockerfile.version>
        <maven.versions.version>2.18.0</maven.versions.version>
        <maven.deploy.verison>3.1.2</maven.deploy.verison>
        <maven.dependency.version>3.7.0</maven.dependency.version>
        <!-- Lock File -->
        <skip.lock.file>false</skip.lock.file>
        <!-- Docker Builds -->
        <docker.build.jarFile>${project.artifactId}-boot.jar</docker.build.jarFile>
        <docker.registry>ghcr.io/smauel</docker.registry>
        <docker.image.name>${project.artifactId}</docker.image.name>
        <docker.image.tag>${project.version}</docker.image.tag>
        <!-- Monorepo Versions (see: VERSIONING.md) -->
        <parent.auto.version>1.1.0-SNAPSHOT</parent.auto.version>
        <boms.auto.version>1.1.0-SNAPSHOT</boms.auto.version>
        <logging-bom.auto.version>1.1.0-SNAPSHOT</logging-bom.auto.version>
        <testing-bom.auto.version>1.1.0-SNAPSHOT</testing-bom.auto.version>
        <backend.auto.version>1.1.0-SNAPSHOT</backend.auto.version>
        <users-api.auto.version>1.1.0-SNAPSHOT</users-api.auto.version>
        <collections.auto.version>1.1.0-SNAPSHOT</collections.auto.version>
        <!-- Auto-Versioning Related -->
        <module.auto.version>${parent.auto.version}</module.auto.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <repositories>
        <repository>
            <id>github</id>
            <name>GitHub Packages</name>
            <url>https://maven.pkg.github.com/smauel/smauel-java</url>
        </repository>
    </repositories>

    <build>
        <pluginManagement>
            <plugins>

                <!-- OpenRewrite Plugin -->
                <plugin>
                    <groupId>org.openrewrite.maven</groupId>
                    <artifactId>rewrite-maven-plugin</artifactId>
                    <version>${rewrite.version}</version>
                    <dependencies>
                        <dependency>
                            <groupId>org.openrewrite.recipe</groupId>
                            <artifactId>rewrite-logging-frameworks</artifactId>
                            <version>${rewrite.logging.version}</version>
                        </dependency>
                        <dependency>
                            <groupId>org.openrewrite.recipe</groupId>
                            <artifactId>rewrite-testing-frameworks</artifactId>
                            <version>${rewrite.testing.version}</version>
                        </dependency>
                        <dependency>
                            <groupId>org.openrewrite.recipe</groupId>
                            <artifactId>rewrite-migrate-java</artifactId>
                            <version>${rewrite.java.version}</version>
                        </dependency>
                    </dependencies>
                    <executions>
                        <execution>
                            <id>run-rewrite</id>
                            <goals>
                                <goal>run</goal>
                            </goals>
                            <phase>generate-sources</phase>
                            <configuration>
                                <activeRecipes>
                                    <recipie>org.openrewrite.java.logging.SystemPrintToLogging</recipie>
                                    <recipie>org.openrewrite.java.logging.slf4j.Slf4jBestPractices</recipie>
                                    <recipie>org.openrewrite.java.migrate.lombok.LombokBestPractices</recipie>
                                    <recipie>org.openrewrite.java.testing.assertj.Assertj</recipie>
                                    <recipie>org.openrewrite.java.testing.mockito.MockitoBestPractices</recipie>
                                    <recipie>org.openrewrite.java.testing.junit5.JUnit5BestPractices</recipie>
                                    <recipie>org.openrewrite.java.testing.testcontainers.TestContainersBestPractices</recipie>
                                </activeRecipes>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>

                <!-- Spotless Plugin -->
                <plugin>
                    <groupId>com.diffplug.spotless</groupId>
                    <artifactId>spotless-maven-plugin</artifactId>
                    <version>${spotless.version}</version>
                    <configuration>
                        <java>
                            <cleanthat/>
                            <palantirJavaFormat/>
                            <importOrder/>
                            <removeUnusedImports/>
                            <formatAnnotations/>
                        </java>
                        <pom>
                            <sortPom>
                                <nrOfIndentSpace>4</nrOfIndentSpace>
                                <expandEmptyElements>false</expandEmptyElements>
                            </sortPom>
                        </pom>
                        <markdown>
                            <includes>
                                <include>**/*.md</include>
                            </includes>
                            <flexmark/>
                        </markdown>
                        <json>
                            <includes>
                                <include>src/**/*.json</include>
                            </includes>
                            <jackson/>
                        </json>
                        <yaml>
                            <includes>
                                <include>src/**/*.yaml</include>
                                <include>src/**/*.yml</include>
                            </includes>
                            <jackson/>
                        </yaml>
                    </configuration>
                    <executions>
                        <execution>
                            <id>spotless</id>
                            <goals>
                                <goal>apply</goal>
                            </goals>
                            <phase>generate-sources</phase>
                        </execution>
                    </executions>
                </plugin>

                <!-- Compiler Plugin -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${maven.compiler.version}</version>
                    <configuration>
                        <source>21</source>
                        <target>21</target>
                        <release>17</release>
                        <compilerArgs>
                            <arg>-Xlint:all,-serial,-processing</arg>
                            <arg>-Werror</arg>
                            <arg>-parameters</arg>
                        </compilerArgs>
                        <annotationProcessorPaths>
                            <path>
                                <groupId>org.projectlombok</groupId>
                                <artifactId>lombok</artifactId>
                                <version>${lombok.version}</version>
                            </path>
                        </annotationProcessorPaths>
                    </configuration>
                </plugin>

                <!-- Surefire Unit Test Runner -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>${maven.surefire.version}</version>
                    <dependencies>
                        <dependency>
                            <groupId>org.aspectj</groupId>
                            <artifactId>aspectjweaver</artifactId>
                            <version>${aspectj.version}</version>
                        </dependency>
                    </dependencies>
                    <executions>
                        <execution>
                            <goals>
                                <goal>test</goal>
                            </goals>
                            <phase>test</phase>
                            <configuration>
                                <includes>
                                    <include>**/*Test.java</include>
                                </includes>
                                <argLine>-javaagent:"${settings.localRepository}/org/aspectj/aspectjweaver/${aspectj.version}/aspectjweaver-${aspectj.version}.jar"</argLine>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>

                <!-- Failsafe Integration Test Runner -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <version>${maven.failsafe.version}</version>
                    <dependencies>
                        <dependency>
                            <groupId>org.aspectj</groupId>
                            <artifactId>aspectjweaver</artifactId>
                            <version>${aspectj.version}</version>
                        </dependency>
                    </dependencies>
                    <executions>
                        <execution>
                            <goals>
                                <goal>integration-test</goal>
                                <goal>verify</goal>
                            </goals>
                            <phase>integration-test</phase>
                            <configuration>
                                <includes>
                                    <include>**/*AT.java</include>
                                </includes>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>

                <!-- JaCoCo Coverage -->
                <plugin>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <version>${jacoco.version}</version>
                    <executions>
                        <!-- Attach JaCoCo agent to Surefire (unit tests) -->
                        <execution>
                            <id>prepare-agent</id>
                            <goals>
                                <goal>prepare-agent</goal>
                            </goals>
                            <configuration>
                                <destFile>${project.build.directory}/jacoco-ut.exec</destFile>
                            </configuration>
                        </execution>

                        <!-- Attach JaCoCo agent to Failsafe (acceptance tests) -->
                        <execution>
                            <id>prepare-agent-acceptance</id>
                            <goals>
                                <goal>prepare-agent-integration</goal>
                            </goals>
                            <phase>pre-integration-test</phase>
                            <configuration>
                                <destFile>${project.build.directory}/jacoco-it.exec</destFile>
                            </configuration>
                        </execution>

                        <!-- Merge coverage reports into one combined report -->
                        <execution>
                            <id>merge</id>
                            <goals>
                                <goal>merge</goal>
                            </goals>
                            <phase>verify</phase>
                            <configuration>
                                <fileSets>
                                    <fileSet>
                                        <directory>${project.build.directory}</directory>
                                        <includes>
                                            <include>jacoco-*.exec</include>
                                        </includes>
                                    </fileSet>
                                </fileSets>
                                <destFile>${project.build.directory}/jacoco-combined.exec</destFile>
                            </configuration>
                        </execution>

                        <!-- Generate report after all tests -->
                        <execution>
                            <id>report</id>
                            <goals>
                                <goal>report</goal>
                            </goals>
                            <phase>verify</phase>
                            <configuration>
                                <dataFile>${project.build.directory}/jacoco-combined.exec</dataFile>
                                <outputDirectory>${project.reporting.outputDirectory}/jacoco</outputDirectory>
                                <formats>
                                    <format>HTML</format>
                                    <format>XML</format>
                                </formats>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>

                <!-- Allure Reports -->
                <plugin>
                    <groupId>io.qameta.allure</groupId>
                    <artifactId>allure-maven</artifactId>
                    <version>${allure.version}</version>
                    <executions>
                        <execution>
                            <id>report</id>
                            <goals>
                                <goal>report</goal>
                            </goals>
                            <phase>verify</phase>
                        </execution>
                    </executions>
                </plugin>

                <!-- Enforcer Plugin -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-enforcer-plugin</artifactId>
                    <version>${maven.enforcer.version}</version>
                    <configuration>
                        <rules>
                            <banDuplicatePomDependencyVersions/>
                            <dependencyConvergence/>
                            <requireReleaseDeps>
                                <failWhenParentIsSnapshot>false</failWhenParentIsSnapshot>
                            </requireReleaseDeps>
                            <requireUpperBoundDeps/>
                        </rules>
                    </configuration>
                    <executions>
                        <execution>
                            <id>enforce-rules</id>
                            <goals>
                                <goal>enforce</goal>
                            </goals>
                            <phase>validate</phase>
                        </execution>
                    </executions>
                </plugin>

                <!-- Javadoc Plugin -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-javadoc-plugin</artifactId>
                    <version>${maven.javadoc.version}</version>
                    <configuration>
                        <additionalJOption>-Xdoclint:-missing</additionalJOption>
                        <failOnWarnings>true</failOnWarnings>
                    </configuration>
                    <executions>
                        <execution>
                            <id>attach-javadocs</id>
                            <goals>
                                <goal>jar</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

                <!-- Source Plugin -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-source-plugin</artifactId>
                    <version>${maven.source.version}</version>
                    <executions>
                        <execution>
                            <id>attach-sources</id>
                            <goals>
                                <goal>jar</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

                <!-- Docker Plugin -->
                <plugin>
                    <groupId>com.spotify</groupId>
                    <artifactId>dockerfile-maven-plugin</artifactId>
                    <version>${maven.dockerfile.version}</version>
                    <configuration>
                        <repository>${docker.registry}/${docker.image.name}</repository>
                        <useMavenSettingsForAuth>true</useMavenSettingsForAuth>
                        <buildArgs>
                            <JAR_FILE>${docker.build.jarFile}</JAR_FILE>
                        </buildArgs>
                        <dockerfile>src/main/docker/Dockerfile</dockerfile>
                    </configuration>
                    <executions>
                        <execution>
                            <id>tag-latest</id>
                            <goals>
                                <goal>build</goal>
                                <goal>tag</goal>
                                <goal>push</goal>
                            </goals>
                            <phase>deploy</phase>
                            <configuration>
                                <tag>latest</tag>
                            </configuration>
                        </execution>
                        <execution>
                            <id>tag-version</id>
                            <goals>
                                <goal>tag</goal>
                                <goal>push</goal>
                            </goals>
                            <phase>deploy</phase>
                            <configuration>
                                <tag>${docker.image.tag}</tag>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>

                <!-- Deploy Plugin -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>${maven.deploy.verison}</version>
                </plugin>

                <!-- Dependency Plugin -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <version>${maven.dependency.version}</version>
                    <executions>
                        <execution>
                            <id>plugin-lock</id>
                            <goals>
                                <goal>resolve-plugins</goal>
                            </goals>
                            <phase>validate</phase>
                            <configuration>
                                <skip>${skip.lock.file}</skip>
                                <outputFile>${project.basedir}/plugin.lock</outputFile>
                            </configuration>
                        </execution>
                        <execution>
                            <id>dependency-lock</id>
                            <goals>
                                <goal>tree</goal>
                            </goals>
                            <phase>validate</phase>
                            <configuration>
                                <skip>${skip.lock.file}</skip>
                                <outputFile>${project.basedir}/pom.lock</outputFile>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>
            <plugin>
                <groupId>com.diffplug.spotless</groupId>
                <artifactId>spotless-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>rewrite</id>
            <properties>
                <skip.lock.file>true</skip.lock.file>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.openrewrite.maven</groupId>
                        <artifactId>rewrite-maven-plugin</artifactId>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>versionRelease</id>
            <properties>
                <skip.lock.file>true</skip.lock.file>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>versions-maven-plugin</artifactId>
                        <version>${maven.versions.version}</version>
                        <executions>
                            <execution>
                                <id>update-version</id>
                                <goals>
                                    <goal>set</goal>
                                </goals>
                                <phase>generate-sources</phase>
                                <configuration>
                                    <generateBackupPoms>false</generateBackupPoms>
                                    <artifactId>${project.artifactId}</artifactId>
                                    <newVersion>${module.auto.version}</newVersion>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>versionNext</id>
            <properties>
                <skip.lock.file>true</skip.lock.file>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>versions-maven-plugin</artifactId>
                        <version>${maven.versions.version}</version>
                        <executions>
                            <execution>
                                <id>update-version</id>
                                <goals>
                                    <goal>set</goal>
                                </goals>
                                <phase>generate-sources</phase>
                                <configuration>
                                    <generateBackupPoms>false</generateBackupPoms>
                                    <artifactId>${project.artifactId}</artifactId>
                                    <newVersion>${module.auto.version}</newVersion>
                                    <processDependencies>false</processDependencies>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>publish</id>
            <properties>
                <skip.lock.file>true</skip.lock.file>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-javadoc-plugin</artifactId>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-source-plugin</artifactId>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-deploy-plugin</artifactId>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>
